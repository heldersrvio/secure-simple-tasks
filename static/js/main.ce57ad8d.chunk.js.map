{"version":3,"sources":["Firebase.js","Components/AdminPage.js","Components/Login.js","Components/SignUp.js","Components/UserDetailPage.js","Components/UserPage.js","App.js","index.js"],"names":["Firebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","firestore","getUsers","a","collection","get","docs","map","doc","data","getUser","userUID","auth","currentUser","uid","undefined","userDoc","exists","Error","createUser","userName","name","email","password","createUserWithEmailAndPassword","userCredential","user","set","tasks","login","signInWithEmailAndPassword","logout","signOut","addTask","task","userTasks","concat","merge","deleteTask","index","filter","_t","i","getUserRole","AdminPage","props","useState","users","setUsers","useEffect","fetchData","className","onClick","_e","redirectToUserDetailPage","Login","emailInput","setEmailInput","passwordInput","setPasswordInput","errorMessage","setErrorMessage","validateAndLogin","length","isLoginSuccessful","type","placeholder","value","onChange","e","target","redirectToSignUp","SignUp","nameInput","setNameInput","userNameInput","setUserNameInput","passwordAgainInput","setPasswordAgainInput","isFinished","setIsFinished","verifyAndSignUp","some","input","validator","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","signUp","wasSuccessful","redirectToLogin","UserDetailPage","back","icon","userInfo","htmlFor","role","UserPage","setUserInfo","isShowingAddTaskSection","setIsShowingAddTaskSection","newTaskInput","setNewTaskInput","taskIndex","previous","addTaskSection","tasksSection","color","size","App","loggedInUser","setLoggedInUser","currentPage","setCurrentPage","viewingUserDetail","setViewingUserDetail","username","userRole","library","add","fas","faPlusCircle","faTrashAlt","faArrowLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce57ad8d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst Firebase = (() => {\n\tconst firebaseConfig = {\n\t\tapiKey: 'AIzaSyBWkRBU1UeQsmoV2Ef8_ZUa34TIObUMeOE',\n\t\tauthDomain: 'simple-tasks-5d0fc.firebaseapp.com',\n\t\tprojectId: 'simple-tasks-5d0fc',\n\t\tstorageBucket: 'simple-tasks-5d0fc.appspot.com',\n\t\tmessagingSenderId: '820423957853',\n\t\tappId: '1:820423957853:web:37e19e6a8a65999c561cb4',\n\t};\n\n\tfirebase.initializeApp(firebaseConfig);\n\tconst database = firebase.firestore();\n\n\tconst getUsers = async () => {\n\t\treturn (await database.collection('users').get()).docs.map((doc) => {\n\t\t\treturn {\n\t\t\t\t...doc.data(),\n\t\t\t};\n\t\t});\n\t};\n\n\tconst getUser = async () => {\n\t\tconst userUID = firebase.auth().currentUser.uid;\n\t\tif (userUID !== null && userUID !== undefined) {\n\t\t\tconst userDoc = await database.collection('users').doc(userUID).get();\n\t\t\tif (userDoc.exists) {\n\t\t\t\treturn {\n\t\t\t\t\t...userDoc.data(),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tthrow new Error('Username does not exist');\n\t};\n\n\tconst createUser = async (userName, name, email, password) => {\n\t\ttry {\n\t\t\tconst userCredential = await firebase\n\t\t\t\t.auth()\n\t\t\t\t.createUserWithEmailAndPassword(email, password);\n\t\t\tawait database\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(userCredential.user.uid)\n\t\t\t\t.set({ userName, name, email, tasks: [] });\n\t\t\treturn true;\n\t\t} catch (_error) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst login = async (email, password) => {\n\t\ttry {\n\t\t\tconst userCredential = await firebase\n\t\t\t\t.auth()\n\t\t\t\t.signInWithEmailAndPassword(email, password);\n\t\t\treturn userCredential.user.uid;\n\t\t} catch (_error) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst logout = async () => {\n\t\tawait firebase.auth().signOut();\n\t};\n\n\tconst addTask = async (userUID, task) => {\n\t\tconst userTasks = (await getUser(userUID)).tasks;\n\t\tawait database\n\t\t\t.collection('users')\n\t\t\t.doc(userUID)\n\t\t\t.set({ tasks: userTasks.concat(task) }, { merge: true });\n\t};\n\n\tconst deleteTask = async (userUID, index) => {\n\t\tconst userTasks = (await getUser(userUID)).tasks;\n\t\tawait database\n\t\t\t.collection('users')\n\t\t\t.doc(userUID)\n\t\t\t.set(\n\t\t\t\t{ tasks: userTasks.filter((_t, i) => i !== index) },\n\t\t\t\t{ merge: true }\n\t\t\t);\n\t};\n\n\tconst getUserRole = async (userUID) => {\n\t\ttry {\n\t\t\treturn (await database.collection('roles').doc('admin').get()).data()\n\t\t\t\t.user === userUID\n\t\t\t\t? 'admin'\n\t\t\t\t: 'user';\n\t\t} catch {\n\t\t\treturn 'user';\n\t\t}\n\t};\n\n\treturn {\n\t\tgetUsers,\n\t\tgetUser,\n\t\tcreateUser,\n\t\tlogin,\n\t\tlogout,\n\t\taddTask,\n\t\tdeleteTask,\n\t\tgetUserRole,\n\t};\n})();\n\nexport default Firebase;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Firebase from '../Firebase';\nimport '../Styles/AdminPage.css';\n\nconst AdminPage = (props) => {\n\tconst [users, setUsers] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tsetUsers(await Firebase.getUsers());\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"admin-page\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<h1>Admin</h1>\n\t\t\t\t<button className=\"logout-button\" onClick={props.logout}>\n\t\t\t\t\tSair\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<h2>Usuários</h2>\n\t\t\t{users.map((user, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"admin-user-item\"\n\t\t\t\t\t\tonClick={(_e) => props.redirectToUserDetailPage(user)}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>{user.userName}</span>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nAdminPage.propTypes = {\n\tredirectToUserDetailPage: PropTypes.func,\n\tlogout: PropTypes.func,\n};\n\nexport default AdminPage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../Styles/Login.css';\n\nconst Login = (props) => {\n\tconst [emailInput, setEmailInput] = useState('');\n\tconst [passwordInput, setPasswordInput] = useState('');\n\tconst [errorMessage, setErrorMessage] = useState('');\n\n\tconst validateAndLogin = async () => {\n\t\tif (emailInput.length === 0 || passwordInput.length === 0) {\n\t\t\tsetErrorMessage('Dados inválidos');\n\t\t} else {\n\t\t\tconst isLoginSuccessful = await props.login(emailInput, passwordInput);\n\t\t\tsetErrorMessage(isLoginSuccessful ? '' : 'Dados inválidos');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<h1>Login</h1>\n\t\t\t<input\n\t\t\t\ttype=\"email\"\n\t\t\t\tplaceholder=\"Email\"\n\t\t\t\tvalue={emailInput}\n\t\t\t\tonChange={(e) => setEmailInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Senha\"\n\t\t\t\tvalue={passwordInput}\n\t\t\t\tonChange={(e) => setPasswordInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<span className=\"login-error-span\">{errorMessage}</span>\n\t\t\t<button onClick={(_e) => validateAndLogin()} className=\"enter-button\">\n\t\t\t\tEntrar\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={(_e) => props.redirectToSignUp()}\n\t\t\t\tclassName=\"not-a-user-button\"\n\t\t\t>\n\t\t\t\tAinda não tenho cadastro\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nLogin.propTypes = {\n\tlogin: PropTypes.func,\n\tredirectToSignUp: PropTypes.func,\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport validator from 'validator';\nimport PropTypes from 'prop-types';\nimport '../Styles/SignUp.css';\n\nconst SignUp = (props) => {\n\tconst [nameInput, setNameInput] = useState('');\n\tconst [userNameInput, setUserNameInput] = useState('');\n\tconst [emailInput, setEmailInput] = useState('');\n\tconst [passwordInput, setPasswordInput] = useState('');\n\tconst [passwordAgainInput, setPasswordAgainInput] = useState('');\n\tconst [errorMessage, setErrorMessage] = useState('');\n\tconst [isFinished, setIsFinished] = useState(false);\n\n\tconst validatePassword = (value) => {\n\t\treturn validator.isStrongPassword(value, {\n\t\t\tminLength: 8,\n\t\t\tminLowercase: 1,\n\t\t\tminUppercase: 1,\n\t\t\tminNumbers: 1,\n\t\t\tminSymbols: 0,\n\t\t});\n\t};\n\n\tconst verifyAndSignUp = async () => {\n\t\tif (\n\t\t\t[\n\t\t\t\tuserNameInput,\n\t\t\t\tnameInput,\n\t\t\t\temailInput,\n\t\t\t\tpasswordInput,\n\t\t\t\tpasswordAgainInput,\n\t\t\t].some((input) => input.length === 0)\n\t\t) {\n\t\t\tsetErrorMessage('Preencha todos os dados');\n\t\t} else if (passwordInput !== passwordAgainInput) {\n\t\t\tsetErrorMessage('Senhas não batem');\n\t\t} else if (!validatePassword(passwordInput)) {\n\t\t\tsetErrorMessage(\n\t\t\t\t'Senha não é forte o suficiente — deve conter pelo menos 8 caracteres, 1 letra minúscula, 1 letra maiúscula e 1 número'\n\t\t\t);\n\t\t} else {\n\t\t\tconst wasSuccessful = await props.signUp(\n\t\t\t\tuserNameInput,\n\t\t\t\tnameInput,\n\t\t\t\temailInput,\n\t\t\t\tpasswordInput\n\t\t\t);\n\t\t\tsetErrorMessage(wasSuccessful ? '' : 'Usuário já existe');\n\t\t\tsetIsFinished(wasSuccessful);\n\t\t}\n\t};\n\n\tconst finishedScreen = (\n\t\t<div className=\"sign-up\">\n\t\t\t<span className=\"sign-up-successful-span\">\n\t\t\t\tUsuário cadastrado com sucesso\n\t\t\t</span>\n\t\t\t<button onClick={(_e) => props.redirectToLogin()}>Fazer login</button>\n\t\t</div>\n\t);\n\n\tconst signUpForm = (\n\t\t<div className=\"sign-up\">\n\t\t\t<input\n\t\t\t\tclassName=\"name-input\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Nome\"\n\t\t\t\tvalue={nameInput}\n\t\t\t\tonChange={(e) => setNameInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Nome de usuário\"\n\t\t\t\tvalue={userNameInput}\n\t\t\t\tonChange={(e) => setUserNameInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"email\"\n\t\t\t\tplaceholder=\"E-mail\"\n\t\t\t\tvalue={emailInput}\n\t\t\t\tonChange={(e) => setEmailInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Senha\"\n\t\t\t\tvalue={passwordInput}\n\t\t\t\tonChange={(e) => setPasswordInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Confirme a senha\"\n\t\t\t\tvalue={passwordAgainInput}\n\t\t\t\tonChange={(e) => setPasswordAgainInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<span className=\"sign-up-error-span\">{errorMessage}</span>\n\t\t\t<button onClick={verifyAndSignUp}>Cadastrar-se</button>\n\t\t</div>\n\t);\n\n\treturn isFinished ? finishedScreen : signUpForm;\n};\n\nSignUp.propTypes = {\n\tsignUp: PropTypes.func,\n\tredirectToLogin: PropTypes.func,\n};\n\nexport default SignUp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Styles/UserDetailPage.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst UserDetailPage = (props) => {\n\treturn (\n\t\t<div className=\"user-detail-page\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<button className=\"back-button\" onClick={props.back}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"arrow-left\" />\n\t\t\t\t</button>\n\t\t\t\t<h1>{props.userInfo.userName}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"user-info-section\">\n\t\t\t\t<div className=\"user-info-name-section\">\n\t\t\t\t\t<label htmlFor=\"name\">Nome: </label>\n\t\t\t\t\t<span>{props.userInfo.name}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-info-email-section\">\n\t\t\t\t\t<label htmlFor=\"email\">E-mail: </label>\n\t\t\t\t\t<span>{props.userInfo.email}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-info-role-section\">\n\t\t\t\t\t<label htmlFor=\"role\">Privilégios: </label>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{props.userInfo.role === 'admin' ? 'Administrador' : 'Usuário'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-info-tasks-section \">\n\t\t\t\t\t<label htmlFor=\"tasks\">Tarefas: </label>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{props.userInfo.tasks.map((task, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"user-info-task-item\" key={index}>\n\t\t\t\t\t\t\t\t\t<span>{task}</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nUserDetailPage.propTypes = {\n\tuserInfo: PropTypes.shape({\n\t\tname: PropTypes.string,\n\t\tuserName: PropTypes.string,\n\t\temail: PropTypes.string,\n\t\ttasks: PropTypes.arrayOf(PropTypes.string),\n\t\trole: PropTypes.string,\n\t}),\n\tback: PropTypes.func,\n};\n\nexport default UserDetailPage;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Firebase from '../Firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../Styles/UserPage.css';\n\nconst UserPage = (props) => {\n\tconst [userInfo, setUserInfo] = useState(null);\n\tconst [isShowingAddTaskSection, setIsShowingAddTaskSection] = useState(false);\n\tconst [newTaskInput, setNewTaskInput] = useState('');\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tsetUserInfo(await Firebase.getUser(props.user));\n\t\t};\n\t\tfetchData();\n\t}, [props.user]);\n\n\tconst deleteTask = async (taskIndex) => {\n\t\tawait Firebase.deleteTask(props.user, taskIndex);\n\t\tsetUserInfo((previous) => {\n\t\t\treturn {\n\t\t\t\t...previous,\n\t\t\t\ttasks: previous.tasks.filter((_t, index) => index !== taskIndex),\n\t\t\t};\n\t\t});\n\t};\n\n\tconst addTask = async () => {\n\t\tawait Firebase.addTask(props.user, newTaskInput);\n\t\tsetUserInfo((previous) => {\n\t\t\treturn {\n\t\t\t\t...previous,\n\t\t\t\ttasks: previous.tasks.concat(newTaskInput),\n\t\t\t};\n\t\t});\n\t\tsetNewTaskInput('');\n\t\tsetIsShowingAddTaskSection(false);\n\t};\n\n\tconst addTaskSection = (\n\t\t<div className=\"add-task-section\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"add-new-task-input\"\n\t\t\t\tvalue={newTaskInput}\n\t\t\t\tonChange={(e) => setNewTaskInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<button onClick={addTask}>Adicionar</button>\n\t\t</div>\n\t);\n\n\tconst tasksSection =\n\t\tuserInfo !== null ? (\n\t\t\t<div className=\"tasks-section\">\n\t\t\t\t<h2>Tarefas</h2>\n\t\t\t\t{userInfo.tasks.map((task, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"task\" key={index}>\n\t\t\t\t\t\t\t<span>{task}</span>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"delete-task-button\"\n\t\t\t\t\t\t\t\tonClick={(_e) => deleteTask(index)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"trash-alt\" color=\"black\" size=\"lg\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{isShowingAddTaskSection ? (\n\t\t\t\t\taddTaskSection\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add-task-button\"\n\t\t\t\t\t\tonClick={(_e) => setIsShowingAddTaskSection(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"plus-circle\" color=\"white\" size=\"lg\" />\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t) : null;\n\n\treturn (\n\t\t<div className=\"user-page\">\n\t\t\t{userInfo !== null ? (\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<h1 className=\"user-page-header\">{userInfo.name}</h1>\n\t\t\t\t\t<button className=\"logout-button\" onClick={props.logout}>\n\t\t\t\t\t\tSair\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{tasksSection}\n\t\t</div>\n\t);\n};\n\nUserPage.propTypes = {\n\tuser: PropTypes.string,\n\tlogout: PropTypes.func,\n};\n\nexport default UserPage;\n","import React, { useState } from 'react';\nimport './App.css';\nimport AdminPage from './Components/AdminPage';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport UserDetailPage from './Components/UserDetailPage';\nimport UserPage from './Components/UserPage';\nimport Firebase from './Firebase';\n\nconst App = () => {\n\tconst [loggedInUser, setLoggedInUser] = useState(null);\n\tconst [currentPage, setCurrentPage] = useState('login');\n\tconst [viewingUserDetail, setViewingUserDetail] = useState(null);\n\n\tconst login = async (username, password) => {\n\t\tconst userUID = await Firebase.login(username, password);\n\t\tif (userUID !== false) {\n\t\t\tconst userRole = await Firebase.getUserRole(userUID);\n\t\t\tsetLoggedInUser(userUID);\n\t\t\tsetCurrentPage(userRole !== 'admin' ? 'user-page' : 'admin-page');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst redirectToSignUp = () => {\n\t\tsetCurrentPage('sign-up');\n\t};\n\n\tconst signUp = async (username, name, email, password) => {\n\t\treturn await Firebase.createUser(username, name, email, password);\n\t};\n\n\tconst redirectToLogin = () => {\n\t\tsetCurrentPage('login');\n\t};\n\n\tconst redirectToUserDetailPage = (user) => {\n\t\tsetViewingUserDetail(user);\n\t\tsetCurrentPage('user-detail-page');\n\t};\n\n\tconst backToAdminPage = () => {\n\t\tsetCurrentPage('admin-page');\n\t};\n\n\tconst logout = () => {\n\t\tFirebase.logout();\n\t\tsetCurrentPage('login');\n\t\tsetLoggedInUser(null);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{currentPage === 'login' ? (\n\t\t\t\t<Login login={login} redirectToSignUp={redirectToSignUp} />\n\t\t\t) : currentPage === 'sign-up' ? (\n\t\t\t\t<SignUp signUp={signUp} redirectToLogin={redirectToLogin} />\n\t\t\t) : currentPage === 'user-page' ? (\n\t\t\t\t<UserPage user={loggedInUser} logout={logout} />\n\t\t\t) : currentPage === 'admin-page' ? (\n\t\t\t\t<AdminPage\n\t\t\t\t\tredirectToUserDetailPage={redirectToUserDetailPage}\n\t\t\t\t\tlogout={logout}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<UserDetailPage userInfo={viewingUserDetail} back={backToAdminPage} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n\tfas,\n\tfaPlusCircle,\n\tfaTrashAlt,\n\tfaArrowLeft,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fas, faPlusCircle, faTrashAlt, faArrowLeft);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}